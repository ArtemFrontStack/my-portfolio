@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
	:root {
		--background: 220 25% 8%;
		--foreground: 210 40% 98%;

		--card: 220 20% 12%;
		--card-foreground: 210 40% 98%;

		--popover: 220 20% 12%;
		--popover-foreground: 210 40% 98%;

		--primary: 220 90% 60%;
		--primary-foreground: 210 40% 98%;
		--primary-glow: 270 90% 65%;

		--secondary: 240 15% 20%;
		--secondary-foreground: 210 40% 98%;

		--muted: 220 15% 18%;
		--muted-foreground: 215 20% 65%;

		--accent: 270 80% 60%;
		--accent-foreground: 210 40% 98%;

		--destructive: 0 84% 60%;
		--destructive-foreground: 210 40% 98%;

		--border: 220 15% 20%;
		--input: 220 15% 20%;
		--ring: 220 90% 60%;

		--radius: 0.75rem;

		/* Custom portfolio gradients */
		--gradient-primary: linear-gradient(
			135deg,
			hsl(220, 90%, 60%),
			hsl(270, 90%, 65%)
		);
		--gradient-card: linear-gradient(
			135deg,
			hsl(220, 20%, 12%),
			hsl(240, 15%, 15%)
		);
		--gradient-subtle: linear-gradient(
			180deg,
			hsl(220, 25%, 8%),
			hsl(220, 20%, 10%)
		);

		/* Shadows */
		--shadow-glow: 0 0 40px hsl(220 90% 60% / 0.3);
		--shadow-card: 0 10px 40px -10px hsl(220 90% 60% / 0.2);
	}
}

html {
	scroll-behavior: smooth;
	scrollbar-width: thin;
	overflow-x: hidden;
	scrollbar-color: hsl(270, 90%, 65%) transparent;
}

body {
	overflow-x: hidden;
}

/* Убираем стрелки у скроллбара */
*::-webkit-scrollbar-button {
	display: none;
	height: 0;
	width: 0;
}

html::-webkit-scrollbar {
	width: 8px;
	height: 8px;
}

html::-webkit-scrollbar-thumb {
	background: hsl(270, 90%, 65%);
	border-radius: 4px;
}

html::-webkit-scrollbar-track {
	background: transparent;
}

@layer base {
	* {
		@apply border-border;
	}

	/* Исправление дергания при hover с scale */
	[class*='hover:scale'],
	[class*='group-hover:scale'] {
		will-change: transform;
		transform: translateZ(0);
		backface-visibility: hidden;
		-webkit-font-smoothing: subpixel-antialiased;
	}

	body {
		@apply bg-background text-foreground;
	}
}

/* Анимации */
@keyframes shimmer {
	0% {
		transform: translateX(-100%);
	}
	100% {
		transform: translateX(100%);
	}
}

@keyframes float {
	0%,
	100% {
		transform: translateY(0px);
	}
	50% {
		transform: translateY(-20px);
	}
}

@keyframes pulse-glow {
	0%,
	100% {
		box-shadow: 0 0 20px hsl(220 90% 60% / 0.3);
	}
	50% {
		box-shadow: 0 0 40px hsl(220 90% 60% / 0.6);
	}
}

@keyframes slide-in-left {
	from {
		opacity: 0;
		transform: translateX(-50px);
	}
	to {
		opacity: 1;
		transform: translateX(0);
	}
}

@keyframes slide-in-right {
	from {
		opacity: 0;
		transform: translateX(50px);
	}
	to {
		opacity: 1;
		transform: translateX(0);
	}
}

@keyframes slide-in-bottom {
	from {
		opacity: 0;
		transform: translateY(50px);
	}
	to {
		opacity: 1;
		transform: translateY(0);
	}
}

@keyframes scale-in {
	from {
		opacity: 0;
		transform: scale(0.8);
	}
	to {
		opacity: 1;
		transform: scale(1);
	}
}

@keyframes rotate-in {
	from {
		opacity: 0;
		transform: rotate(-10deg) scale(0.9);
	}
	to {
		opacity: 1;
		transform: rotate(0) scale(1);
	}
}

@keyframes glow-pulse {
	0%,
	100% {
		box-shadow: 0 0 10px hsl(220 90% 60% / 0.2), 0 0 20px hsl(220 90% 60% / 0.1);
	}
	50% {
		box-shadow: 0 0 20px hsl(220 90% 60% / 0.4), 0 0 40px hsl(220 90% 60% / 0.2);
	}
}

.animate-shimmer {
	animation: shimmer 2s infinite;
}

.animate-float {
	animation: float 3s ease-in-out infinite;
}

.animate-pulse-glow {
	animation: pulse-glow 2s ease-in-out infinite;
}

.animate-slide-in-left {
	animation: slide-in-left 0.6s ease-out;
}

.animate-slide-in-right {
	animation: slide-in-right 0.6s ease-out;
}

.animate-slide-in-bottom {
	animation: slide-in-bottom 0.6s ease-out;
}

.animate-scale-in {
	animation: scale-in 0.5s ease-out;
}

.animate-rotate-in {
	animation: rotate-in 0.6s ease-out;
}

.animate-glow-pulse {
	animation: glow-pulse 2s ease-in-out infinite;
}

/* Ripple эффект */
.ripple {
	position: absolute;
	border-radius: 50%;
	background-color: rgba(255, 255, 255, 0.3);
	transform: scale(0);
	animation: ripple-animation 0.6s ease-out;
	pointer-events: none;
}

@keyframes ripple-animation {
	to {
		transform: scale(4);
		opacity: 0;
	}
}
.grey-custom-scrollbar {
	scrollbar-width: thin;
	scrollbar-color: hsl(220, 90%, 60%) transparent;
}

.grey-custom-scrollbar::-webkit-scrollbar {
	width: 6px;
	height: 6px;
}

.grey-custom-scrollbar::-webkit-scrollbar-button {
	display: none;
	height: 0;
	width: 0;
}

.grey-custom-scrollbar::-webkit-scrollbar-thumb {
	border-radius: 4px;
	background: hsl(220, 90%, 60%);
}

.grey-custom-scrollbar::-webkit-scrollbar-track {
	background: transparent;
}

/* Утилиты для плавного масштабирования без дергания */
@layer utilities {
	.smooth-scale {
		will-change: transform;
		transform: translateZ(0);
		backface-visibility: hidden;
		-webkit-font-smoothing: subpixel-antialiased;
	}

	.hover-lift {
		@apply smooth-scale transition-all duration-300;
	}

	.hover-lift:hover {
		transform: translateY(-2px) scale(1.02) translateZ(0);
	}
}

input:focus,
textarea:focus,
select:focus {
  outline: none !important;
  box-shadow: none !important;

}

#select-trigger:focus, #select-trigger:focus-visible {
  outline: none !important;
  box-shadow: none !important;

}

input {
	border: 2px solid hsl(var(--input));
}

input:-webkit-autofill,
input:-webkit-autofill:focus,
input:-webkit-autofill:hover,
input:-webkit-autofill:active {
	-webkit-box-shadow: 0 0 0 1000px hsl(var(--background) / 0.5) inset !important;
	box-shadow: 0 0 0 1000px hsl(var(--background) / 0.5) inset !important;
	-webkit-text-fill-color: hsl(var(--foreground)) !important;
	color: hsl(var(--foreground)) !important;
	backdrop-filter: blur(8px);
	transition: background-color 9999s ease-in-out 0s;
	caret-color: hsl(var(--foreground)) !important;
}


.loader {
	--color-one: hsl(var(--primary));
	--color-two: hsl(var(--accent));
	--color-three: hsl(var(--primary) / 0.5);
	--color-four: hsl(var(--accent) / 0.5);
	--color-five: hsl(var(--primary) / 0.25);
	--time-animation: 2s;
	--size: 1; /* You can change the size */
	position: relative;
	border-radius: 50%;
	transform: scale(var(--size));
	box-shadow:
			0 0 25px 0 var(--color-three),
			0 20px 50px 0 var(--color-four);
	animation: colorize calc(var(--time-animation) * 3) ease-in-out infinite;
}

.loader::before {
	content: "";
	position: absolute;
	top: 10px;
	left: 10px;
	width: 100px;
	height: 100px;
	border-radius: 50%;
	border-top: solid 1px var(--color-one);
	border-bottom: solid 1px var(--color-two);
	background: linear-gradient(180deg, var(--color-five), var(--color-four));
	box-shadow:
			inset 0 10px 10px 0 var(--color-three),
			inset 0 -10px 10px 0 var(--color-four);
}

.loader .box {
	width: 100px;
	height: 100px;
	background: linear-gradient(
			180deg,
			var(--color-one) 30%,
			var(--color-two) 70%
	);
	mask: url(#clipping);
	-webkit-mask: url(#clipping);
}

.loader svg {
	position: absolute;
}

.loader svg #clipping {
	filter: contrast(15);
	animation: roundness calc(var(--time-animation) / 2) linear infinite;
}

.loader svg #clipping polygon {
	filter: blur(7px);
}

.loader svg #clipping polygon:nth-child(1) {
	transform-origin: 75% 25%;
	transform: rotate(90deg);
}

.loader svg #clipping polygon:nth-child(2) {
	transform-origin: 50% 50%;
	animation: rotation var(--time-animation) linear infinite reverse;
}

.loader svg #clipping polygon:nth-child(3) {
	transform-origin: 50% 60%;
	animation: rotation var(--time-animation) linear infinite;
	animation-delay: calc(var(--time-animation) / -3);
}

.loader svg #clipping polygon:nth-child(4) {
	transform-origin: 40% 40%;
	animation: rotation var(--time-animation) linear infinite reverse;
}

.loader svg #clipping polygon:nth-child(5) {
	transform-origin: 40% 40%;
	animation: rotation var(--time-animation) linear infinite reverse;
	animation-delay: calc(var(--time-animation) / -2);
}

.loader svg #clipping polygon:nth-child(6) {
	transform-origin: 60% 40%;
	animation: rotation var(--time-animation) linear infinite;
}

.loader svg #clipping polygon:nth-child(7) {
	transform-origin: 60% 40%;
	animation: rotation var(--time-animation) linear infinite;
	animation-delay: calc(var(--time-animation) / -1.5);
}

@keyframes rotation {
	0% {
		transform: rotate(0deg);
	}
	100% {
		transform: rotate(360deg);
	}
}

@keyframes roundness {
	0% {
		filter: contrast(15);
	}
	20% {
		filter: contrast(3);
	}
	40% {
		filter: contrast(3);
	}
	60% {
		filter: contrast(15);
	}
	100% {
		filter: contrast(15);
	}
}

@keyframes colorize {
	0% {
		filter: hue-rotate(0deg);
	}
	20% {
		filter: hue-rotate(-30deg);
	}
	40% {
		filter: hue-rotate(-60deg);
	}
	60% {
		filter: hue-rotate(-90deg);
	}
	80% {
		filter: hue-rotate(-45deg);
	}
	100% {
		filter: hue-rotate(0deg);
	}
}
